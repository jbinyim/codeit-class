// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  name String
  encryptedPassword String
  orders Order[]
  favoriteProducts FavoriteProduct[]
}

model Product {
  id Int @id @default(autoincrement())
  name String
  price Int
  category ProductCategory
  orderItems OrderItem[]
  favoriteProducts FavoriteProduct[]
}

enum ProductCategory {
  shoes
  food
  accesorry
  clothes
  electronics
}

model Order {
  id String @id @default(uuid())
  status OrderStatus @default(pending)
  user User @relation(fields: [userId], references: [id], onDelete: Restrict)
  userId String
  totalAmount Int?
  paidAmount Int @default(0)
  refundedAmount Int @default(0)
  balanceAmount Int @default(0)
  orderedAt DateTime @default(now())
  orderItems OrderItem[]
}

model OrderItem {
  id String @id @default(uuid())
  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId String
  product Product @relation(fields: [productId], references: [id], onDelete: Restrict)
  productId Int
  quantity Int
  amount Int
}

enum OrderStatus {
  pending
  paid
  onShipping
  completed
  refunded
}

model FavoriteProduct {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  createdAt DateTime @default(now())

  @@unique([userId, productId])
}